var ccObject={options:options={dayNames:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],dayBegin:1,monthNames:[],onPrevMonth:function(e){},onNextMonth:function(e){},data:[{date:null,eventName:null,className:null,onclick:function(ev,data){},dateColor:"#38385c"}],onclickDate:function(ev,data){},nextIcon:'&gt;',prevIcon:'&lt;',},el:"",eventAnimate:"none",pickedDate:new Date(),prevMonth(el){this.pickedDate=new Date(this.pickedDate.getFullYear(),this.pickedDate.getMonth()-2,1);this.options.onPrevMonth(this.pickedDate);this.eventAnimate="prev";this.render(this.options.containerId,el)},nextMonth(el){this.pickedDate=new Date(this.pickedDate.getFullYear(),this.pickedDate.getMonth(),1);this.options.onNextMonth(this.pickedDate);this.eventAnimate="next";this.render(this.options.containerId,el)},render(containerId,evt){if(!evt)return;this.pickedDate=evt&&evt.type=='load'?new Date():this.pickedDate;divId=containerId?containerId:this.options.containerId;const elem=$(document.getElementById(divId));elem.html("")
const gcCalendar=$(`<div class="gc-calendar"></div>`);elem.append(gcCalendar)
const head=$(`<div class="gc-calendar-header"></div>`);head.appendTo(gcCalendar)
const prev=$(`<button type="button" class='prev'>${this.options.prevIcon}</button>`)
prev.appendTo(head)
prev.on("click",function(e){ccObject.prevMonth(e)})
const montYear=$(`<span class="gc-calendar-month-year"></span>`);montYear.appendTo(head)
const pickedMonth=$(`<span class='month'>${this.options.monthNames[this.pickedDate.getMonth()]},  </span>`)
pickedMonth.appendTo(montYear)
const pickedYear=$(`<span class='year'>  ${this.pickedDate.getFullYear()}</span>`)
pickedYear.appendTo(montYear)
const next=$(`<button type="button" class='next'>${this.options.nextIcon}</button>`)
next.appendTo(head)
next.on("click",function(e){ccObject.nextMonth(e)})
const divLegend=$('<div class="gc-calendar-month-year"> <div class="legend badge bg-annual">Annual Leave</div><div class="legend badge bg-public">Bank/Public Holiday</div><div class="legend badge bg-sick">Sick Leave</div></div>')
divLegend.appendTo(head)
const calendar=$('<table class="calendar"></table>')
calendar.removeClass("slide-in-left slide-in-right slide-out-left slide-out-right")
if(this.eventAnimate=="none"){calendar.hide().addClass("slide-in-left").show()}else if(this.eventAnimate=="prev"){calendar.hide().addClass("slide-out-right").show().delay(200).hide().removeClass("slide-out-right").addClass("slide-in-left").show()}else{calendar.hide().addClass("slide-out-left").show().delay(200).hide().removeClass("slide-out-left").addClass("slide-in-right").show()}
calendar.appendTo(gcCalendar)
const header=$('<thead></thead>');header.appendTo(calendar);const headerRow=$('<tr></tr>');headerRow.appendTo(header);const dayLength=this.options.dayNames.length;for(let i=0;i<dayLength;i++){var index=i+ccObject.options.dayBegin
if(index>=dayLength){index=index-dayLength}
const element=ccObject.options.dayNames[index];var dayClass=element.match(/Sat/)||element.match(/Sun/)?"dayname weekend":"dayname"
const headerCell=$('<th class="'+dayClass+'">'+element+'</th>');headerCell.appendTo(headerRow)}
var body=$('<tbody></tbody>');body.appendTo(calendar);const calendarData=this.getCalendarArray()
const stackDate=new Date()
calendarData.forEach(function(e){var row=$('<tr></tr>');e.forEach(function(e){var isToday=stackDate.getFullYear()==e.datejs.getFullYear()&&stackDate.getMonth()==e.datejs.getMonth()&&stackDate.getDate()==e.datejs.getDate();var cell=isToday?$('<td class="day today"></td>'):$('<td class="day"></td>');cell.appendTo(row);var dayClass="day-number";if(stackDate.getFullYear()==e.datejs.getFullYear()&&stackDate.getMonth()==e.datejs.getMonth()&&stackDate.getDate()==e.datejs.getDate()){dayClass="day-number today"}
var day=$(`<span class="`+dayClass+`">${e.date}</span>`);cell.addClass(e.class)
cell.append(day);if(ccObject.options.data){var dayStyle=""
ccObject.options.data.forEach(function(evt){if(evt.date.getFullYear()==e.datejs.getFullYear()&&evt.date.getMonth()==e.datejs.getMonth()&&evt.date.getDate()==e.datejs.getDate()){cell.addClass("event")
var event=$(`<div class="${evt.className}">${evt.eventName}</div>`)
dayStyle="color:inherit"
event.on("click",function(e){evt.onclick(e,evt)})
cell.append(event)}})}})
row.appendTo(body)})},getCalendarArray(){const dayLength=7
var firstDay=new Date(this.pickedDate.getFullYear(),this.pickedDate.getMonth(),1).getDay();var lastDay=new Date(this.pickedDate.getFullYear(),this.pickedDate.getMonth()+1,0).getDate();var prevMonthLastDay=new Date(this.pickedDate.getFullYear(),this.pickedDate.getMonth(),0).getDate();var firstWeek=[];var stop=firstDay-ccObject.options.dayBegin
if(stop<0){stop=dayLength+stop}
for(let i=0;i<stop;i++){firstWeek.push({datejs:new Date(this.pickedDate.getFullYear(),this.pickedDate.getMonth()-1,prevMonthLastDay),date:prevMonthLastDay,class:"prev-month"});prevMonthLastDay--}
firstWeek.reverse()
var cDate=1;for(let i=firstWeek.length;i<dayLength;i++){firstWeek.push({datejs:new Date(this.pickedDate.getFullYear(),this.pickedDate.getMonth(),cDate),date:cDate,class:"current-month"});cDate++}
var cMonth=[firstWeek]
var cdateStop=!1
var datejs=this.pickedDate
var className="current-month"
for(let i=1;i<6;i++){var week=[]
for(let j=0;j<dayLength;j++){week.push({datejs:new Date(datejs.getFullYear(),datejs.getMonth(),cDate),date:cDate,class:className});cDate++;if(cDate>lastDay){cDate=1;datejs.setDate(1)
datejs.setMonth(datejs.getMonth()+1)
cdateStop=!0;className="next-month"}}
cMonth.push(week)
if(cdateStop){break}}
return cMonth},parseData:function(serverData){var data=[];$.each(serverData,function(index,val){data.push({date:new Date(val[1]),eventName:val[3],className:val[0].match(/Annual/)?'badge bg-annual':(val[0].match(/Sick/)?'badge bg-sick':(val[0].match(/Public/)?'badge bg-public':'badge bg-warning'))})});return data},init:function(data,containerId){ccObject.options.dayNames=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];ccObject.options.dayBegin=1;ccObject.options.monthNames=['January','February','March','April','May','June','July','August','September','October','November','December'];ccObject.options.onPrevMonth=function(e){}
ccObject.options.onNextMonth=function(e){}
ccObject.options.data=ccObject.parseData(data)
ccObject.options.onclickDate=function(e,data){}
ccObject.options.nextIcon='&gt;'
ccObject.options.prevIcon='&lt;'
ccObject.options.containerId=containerId;ccObject.el=this;ccObject.render(containerId,new Event('load'))}}